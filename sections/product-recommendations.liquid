<div data-product-recommendations class="section empty:hidden [&:has(.carousel:empty)]:hidden">
  {%- if recommendations.performed? and recommendations.products_count > 0 -%}
    <header class="mb-8 rte">
      {{ section.settings.content }}
    </header>

    {% render 'product-carousel' with recommendations.products %}
  {%- endif -%}
</div>

<script type="module">
  // TODO: use intersection observer to lazyload
  fetch('{{ routes.product_recommendations_url }}?section_id={{ section.id }}&product_id={{ product.id }}&limit=4&intent=related')
    .then(res => res.text())
    .then(data => {
      const div = document.createElement('div')
      div.innerHTML = data
      document.querySelector('[data-product-recommendations]').innerHTML = div.querySelector('[data-product-recommendations]')?.innerHTML ?? ''
    })
</script>

<style type="text/tailwindcss">
  #shopify-section-{{ section.id }} {
    --canvas: {{ section.settings.color_scheme.settings.canvas }};
    --ink: {{ section.settings.color_scheme.settings.ink }};
    @apply bg-[var(--canvas)] text-[var(--ink)];
  }
</style>

{% schema %}
{
  "name": "Product recommendations",
  "tag": "section",
  "settings": [
    {
      "type": "color_scheme",
      "id": "color_scheme",
      "label": "Color scheme"
    },
    {
      "type": "richtext",
      "id": "content",
      "label": "Content"
    },
    {
      "type": "select",
      "id": "intent",
      "label": "Intent",
      "options": [
        {
          "value": "related",
          "label": "related"
        },
        {
          "value": "complementary",
          "label": "complementary"
        }
      ],
      "default": "related",
      "info": "Documentation found [here](https://shopify.dev/docs/api/ajax/reference/product-recommendations)."
    }
  ],
  "disabled_on": {
    "groups": [
      "*"
    ]
  },
  "presets": [
    {
      "name": "Product recommendations"
    }
  ]
}
{% endschema %}
