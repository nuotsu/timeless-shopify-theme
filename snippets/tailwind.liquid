<script src="//cdn.tailwindcss.com"></script>
<script>
tailwind.config = {
  theme: {
    extend: {
      colors: {
        // base
        canvas: `{{ settings.color_schemes.default.settings.canvas | default: '#fff' }}`,
        ink: `{{ settings.color_schemes.default.settings.ink | default: '#000' }}`,
        stroke: `{{ settings.color_schemes.default.settings.stroke | default: '#a3a3a3' }}`,
        // subdued
        'canvas-subdued': `{{ settings.color_schemes.default.settings.canvas_subdued | default: '#f7f7f7' }}`,
        'ink-subdued': `{{ settings.color_schemes.default.settings.ink_subdued | default: '#a3a3a3' }}`,
        // accents
        primary: `{{ settings.color_schemes.default.settings.primary | default: '#d5001c' }}`,
        'primary-contrasting': `{{ settings.color_schemes.default.settings.primary_contrasting | default: '#fff' }}`,
        secondary: `{{ settings.color_schemes.default.settings.secondary | default: '#f4c827' }}`,
        'secondary-contrasting': `{{ settings.color_schemes.default.settings.secondary_contrasting | default: '#000' }}`,
      },
      fontFamily: {
        heading: `{{ settings.font_heading.family }},{{ settings.font_heading.fallback_families }}`,
        body: `{{ settings.font_body.family }},{{ settings.font_body.fallback_families }}`,
      },
      screens: {
        '<sm': { max: '639px' },
        '<md': { max: '767px' },
        '<lg': { max: '1023px' },
        '<xl': { max: '1279px' },
        '<2xl': { max: '1535px' },
      },
    }
  }
}
</script>

{% capture tailwind %}
<style type="text/tailwindcss">
{{ settings.font_heading | font_face: font_display: string }}
{{ settings.font_body | font_face: font_display: string }}

@layer base {
  :root {
    --canvas: theme('colors.canvas');
    --ink: theme('colors.ink');
    --stroke: theme('colors.stroke');
    --border-radius: {{ settings.border_radius }}px;
  }

  [hidden] { display: none !important; }

  :focus-visible {
    outline: none;
    @apply ring ring-primary/50;
  }

  :target {
    scroll-margin-top: var(--header-height, 0px);
  }

  html {
    scroll-behavior: smooth;
  }

  body {
    @apply bg-canvas text-ink accent-primary caret-primary font-body;
  }

  summary {
    cursor: pointer;
    display: block;
  }
  ::-webkit-details-marker {
    display: none;
  }

  label, select {
    cursor: pointer;
  }

  th {
    @apply technical font-normal;
  }

  hr {
    @apply border-[var(--stroke)];
  }

  address {
    font-style: normal;
  }
}

@layer components {
  /* typography */

  ._h {
    text-wrap: balance;
    @apply font-heading;
  }
  .h1 { @apply _h text-4xl; }
  .h2 { @apply _h text-3xl; }
  .h3 { @apply _h text-xl; }
  .h4 { @apply _h text-lg; }
  .h5 { @apply _h; }
  .h6 { @apply _h; }

  .technical {
    text-transform: uppercase;
    letter-spacing: 0.1em;
  }

  .illuminated-manuscript > p:first-of-type::first-letter {
    @apply font-heading text-7xl;
  }

  /* links, CTAs */

  ._btn {
    cursor: pointer;
    display: inline-flex;
    gap: .5em;
    align-items: center;
    justify-content: center;
    border-radius: var(--border-radius);
    padding: 0.5em 1em;

    @apply disabled:grayscale border border-transparent transition-all;

    {% if settings.fully_rounded_buttons %}
      @apply rounded-full;
    {% endif %}
  }

  .action {
    @apply _btn anim-emoji bg-primary text-primary-contrasting font-heading hover:scale-105 shadow-md hover:shadow-lg;
  }
  .action-secondary {
    @apply _btn anim-emoji bg-secondary text-secondary-contrasting font-heading hover:scale-105 shadow-md hover:shadow-lg;
  }

  .ghost {
    @apply _btn hover:bg-primary/10 active:bg-primary/20;
  }

  .link {
    @apply underline hover:decoration-2;
  }

  .link-subdued {
    @apply underline decoration-dashed decoration-neutral-400 hover:decoration-current hover:decoration-solid;
  }

  /* inputs */

  .input {
    border-radius: var(--border-radius);
    padding-inline: .5em;

    @apply inline-flex border border-[var(--stroke)] bg-transparent focus:border-primary focus-visible:!border-primary;
  }
  .input:hover {
    @apply hover:border-opacity-100 hover:border-ink-subdued;
  }
  .input:invalid:not(:placeholder-shown, [type="password"]) {
    @apply border-red-600;
  }

  .select {
    padding-block: .5em;
    @apply input focus:border-primary;
  }

  .input-number {
    @apply input text-center pr-0;
  }
  .input-number-label {
    @apply relative z-[1] inline-block bg-canvas translate-x-full leading-none;
  }

  form .errors {
    border-radius: var(--border-radius);
    @apply p-2 bg-red-600/20 text-red-600 text-sm;
  }

  /* tokens */

  .price, [data-price], [data-compare-at-price] {
    font-variant-numeric: tabular-nums;
  }
  :is(.price, [data-price], [data-compare-at-price]):is(s) {
    @apply decoration-red-600;
  }

  .price-negative {
    @apply price text-red-600 before:content-['-'];
  }

  .hashtag::before {
    @apply content-['#'] text-ink-subdued;
  }
  .hashtag[href]:hover::before {
    color: inherit;
  }

  .chip {
    padding: 0 .5em;
    border-radius: var(--border-radius);
  }

  .badge {
    padding: .1em .5em;
    @apply bg-primary text-primary-contrasting text-xs shadow-md;
  }

  /* layouts */

  .section {
    @apply max-w-screen-xl mx-auto py-8 sm:py-12 px-4 sm:px-8;
  }

  .pagination {
    @apply flex justify-center gap-4;
  }
  .pagination .current {
    @apply font-bold;
  }
  .pagination a:hover {
    text-decoration: underline;
  }
}

@layer utilities {
  .full-width {
    width: 100vw;
    margin-inline: calc(50% - 50vw);
  }

  .sticky-below-header {
    position: sticky;
    top: calc(var(--header-height, 0px) + var(--offset, .5rem));
  }

  .with-icon {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    gap: .5em;
  }
  .with-icon svg {
    flex-shrink: 0;
    height: 1.5em;
    transition: scale 0.1s ease-in-out;
  }

  [open] > .with-icon svg,
  .with-icon:hover svg,
  .with-icon:is(button, [href]):focus svg {
    scale: 1.2;
  }

  .with-label {
    @apply flex flex-col items-start gap-1;
  }
  .with-label label {
    z-index: 1;
    margin-bottom: -1.2em;
    padding-inline: .5em;
    font-size: x-small;
    @apply relative technical ml-1 bg-[var(--canvas)] text-[var(--ink)];
  }

  .with-label :is(textarea, input) {
    padding-block: .5em;
  }

  .with-accordion .with-icon svg {
    height: 1.2em;
    @apply transition-transform;
  }
  .with-accordion[open] svg {
    @apply rotate-90;
  }

  .divider {
    position: relative;
  }
  .divider span {
    position: relative;
    padding-right: 0.5ch;
    @apply bg-[var(--canvas)];
  }
  .divider::before {
    content: '';
    position: absolute;
    inset: 50% 0 auto;
    translate: 0 -50%;
    @apply border-b border-[var(--stroke)];
  }

  .item-grid {
    display: grid;
    align-items: start;
    --size: 180px;
    @apply grid-cols-2 md:grid-cols-[repeat(auto-fill,minmax(var(--size),1fr))] gap-8 <sm:gap-x-4;
  }

  .carousel {
    display: flex;
    align-items: flex-start;
    overflow-x: auto;
    scroll-snap-type: x mandatory;
  }
  .carousel > * {
    scroll-snap-align: center;
    flex: 0 0 var(--size, min(80vw, 280px));
  }

  /* richtext */

  .rte > * + * {
    margin-top: var(--spacing, 1rem);
  }

  .rte h1 { @apply h1; }
  .rte h2 { @apply h2; }
  .rte h3 { @apply h3; }
  .rte h4 { @apply h4; }
  .rte h5 { @apply h5; }
  .rte h6 { @apply h6; }

  .rte :is(ul, ol) {
    list-style: revert;
    padding-left: 1.5em;
  }

  .rte a:not(:is(.action, .action-secondary, .ghost, .hashtag)) {
    @apply link;
  }

  .rte :is(th, td) {
    padding: 0.25em 1em;
    @apply border;
  }

  .rte.text-center > .cta-list {
    @apply justify-center;
  }
  .rte.text-right > .cta-list {
    @apply justify-end;
  }

  /* anims */

  @keyframes fade {
    from {
      opacity: 0;
      scale: var(--scale, 1);
      translate: var(--translate, 0 0);
    }
    to {
      opacity: 1;
      scale: 1;
      translate: 0 0;
    }
  }

  .anim-fade {
    animation: fade .2s ease-in-out var(--delay, 0s) forwards;
  }
  .anim-fade-r {
    @apply anim-fade;
    --translate: -1rem 0;
  }
  .anim-fade-l {
    @apply anim-fade;
    --translate: 1rem 0;
  }
  .anim-fade-b {
    @apply anim-fade;
    --translate: 0 -1rem;
  }

  :not(.no-anim-emoji).anim-emoji {
    position: relative;
  }
  :not(.no-anim-emoji).anim-emoji::after {
    content: var(--anim-emoji, '{{ settings.anim_emoji }}');
    position: absolute;
    z-index: -1;
    inset: 50% auto auto 100%;
    translate: -200% -50%;
    rotate: -8deg;
    @apply transition-[translate,rotate,scale,opacity] drop-shadow;
  }
  :not(.no-anim-emoji).anim-emoji:hover::after {
    translate: -25% -50%;
    rotate: 8deg;
  }
  :not(.no-anim-emoji).anim-emoji:not(:hover)::after {
    opacity: 0;
    scale: 0;
  }
}
</style>
{% endcapture %}
{{ tailwind | strip_newlines | strip | replace: '  ', '' }}
